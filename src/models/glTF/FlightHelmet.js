/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useLayoutEffect, useRef, useState } from "react";
import { useCubeTexture, useGLTF } from "@react-three/drei";
import Gltf from "./FlightHelmet.glb";

export default function Model(props) {
    const group = useRef();
    const { nodes, materials } = useGLTF(Gltf);
    const [index, setIndex] = useState(0);
    const envMap = useCubeTexture(["px.png", "nx.png", "py.png", "ny.png", "pz.png", "nz.png"], { path: "env/" });

    console.log(materials);
    useLayoutEffect(() => {
        Object.keys(materials).forEach((m) => {
            materials[m].envMap = envMap;
            materials[m].envMapIntensity = 1;
            materials[m].metalness = 1;
            materials[m].rougness = 0;
        });
        setIndex((prev) => prev + 1);
    }, [materials, envMap]);

    return (
        <group ref={group} {...props} dispose={null}>
            <mesh castShadow material={materials.HoseMat} geometry={nodes.Hose_low.geometry} />
            <mesh
                receiveShadow
                castShadow
                material={materials.RubberWoodMat}
                geometry={nodes.RubberWood_low.geometry}
            />
            <mesh
                receiveShadow
                castShadow
                material={materials.GlassPlasticMat}
                geometry={nodes.GlassPlastic_low.geometry}
            />
            <mesh
                receiveShadow
                castShadow
                material={materials.MetalPartsMat}
                geometry={nodes.MetalParts_low.geometry}
            />
            <mesh
                receiveShadow
                castShadow
                material={materials.LeatherPartsMat}
                geometry={nodes.LeatherParts_low.geometry}
            />
            <mesh receiveShadow castShadow material={materials.LensesMat} geometry={nodes.Lenses_low.geometry} />
        </group>
    );
}

useGLTF.preload("Gltf", "");
